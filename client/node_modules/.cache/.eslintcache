[{"/home/martina/Documents/mysql-learning/mysql-node/client/src/index.js":"1","/home/martina/Documents/mysql-learning/mysql-node/client/src/App.js":"2","/home/martina/Documents/mysql-learning/mysql-node/client/src/components/NoteList.js":"3","/home/martina/Documents/mysql-learning/mysql-node/client/src/components/NoteForm.js":"4"},{"size":255,"mtime":1692420294288,"results":"5","hashOfConfig":"6"},{"size":2561,"mtime":1692422184875,"results":"7","hashOfConfig":"6"},{"size":757,"mtime":1692423763699,"results":"8","hashOfConfig":"6"},{"size":731,"mtime":1692422008311,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ralbv2",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/martina/Documents/mysql-learning/mysql-node/client/src/index.js",[],[],"/home/martina/Documents/mysql-learning/mysql-node/client/src/App.js",["24"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteForm from './components/NoteForm';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [editedNote, setEditedNote] = useState(null);\n\n  useEffect(() => {\n    fetchNotes();\n  }, [notes]);\n\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get('http://localhost:1995/notes');\n      setNotes(response.data.results);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const handleAddNote = async () => {\n    if (newNote.trim() === '') return;\n\n    try {\n      const response = await axios.post('http://localhost:1995/notes', {\n        description: newNote\n      });\n      setNotes([...notes]);\n      setNewNote('');\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  };\n\n  const handleEditNote = (note) => {\n    setEditedNote(note);\n    setNewNote(note.description);\n  };\n\n  const handleCancelEdit = () => {\n    setEditedNote(null);\n    setNewNote('');\n  };\n\n  const handleUpdateNote = async () => {\n    if (!editedNote || newNote.trim() === '') return;\n\n    try {\n      const response = await axios.put(`http://localhost:1995/notes/${editedNote.note_id}`, {\n        description: newNote\n      });\n      \n      const updatedNotes = notes.map(note =>\n        note.note_id === editedNote.note_id ? { ...note, description: response.data.results.description } : note\n      );\n\n      setNotes(updatedNotes);\n      setEditedNote(null);\n      setNewNote('');\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n  };\n\n  const handleDeleteNote = async (id) => {\n    try {\n      await axios.delete(`http://localhost:1995/notes/${id}`);\n      setNotes(notes.filter(note => note.note_id !== id));\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Note Taking App</h1>\n      \n      <NoteForm\n        newNote={newNote}\n        handleNoteChange={handleNoteChange}\n        handleAddNote={handleAddNote}\n        handleUpdateNote={handleUpdateNote}\n        editedNote={editedNote}\n        handleCancelEdit={handleCancelEdit}\n      />\n\n      <NoteList notes={notes} handleDeleteNote={handleDeleteNote} handleEditNote={handleEditNote} />\n    </div>\n  );\n}\n\nexport default App;\n",[],"/home/martina/Documents/mysql-learning/mysql-node/client/src/components/NoteList.js",[],[],"/home/martina/Documents/mysql-learning/mysql-node/client/src/components/NoteForm.js",[],[],{"ruleId":"25","severity":1,"message":"26","line":33,"column":13,"nodeType":"27","messageId":"28","endLine":33,"endColumn":21},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar"]