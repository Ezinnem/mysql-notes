{"ast":null,"code":"var _jsxFileName = \"/home/martina/Documents/mysql-learning/mysql-node/client/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [notes, setNotes] = useState([]);\n//   const [newNote, setNewNote] = useState('');\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, [notes]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:1995/notes');\n//       setNotes(response.data.results);\n//     } catch (error) {\n//       console.error('Error fetching notes:', error);\n//     }\n//   };\n\n//   const handleNoteChange = (event) => {\n//     setNewNote(event.target.value);\n//   };\n\n//   const handleAddNote = async () => {\n//     if (newNote.trim() === '') return;\n\n//     try {\n//       const response = await axios.post('http://localhost:1995/notes', {\n//         description: newNote\n//       });\n//       setNotes([...notes]);\n//       setNewNote('');\n//     } catch (error) {\n//       console.error('Error adding note:', error);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:1995/notes/${id}`);\n//       setNotes(notes.filter(note => note.note_id !== id));\n//     } catch (error) {\n//       console.error('Error deleting note:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Note Taking App</h1>\n\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter a new note\"\n//           value={newNote}\n//           onChange={handleNoteChange}\n//         />\n//         <button onClick={handleAddNote}>Add Note</button>\n//       </div>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Note</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {notes.map(note => (\n//             <tr key={note.note_id}>\n//               <td>{note.note_id}</td>\n//               <td>{note.description}</td>\n//               <td>\n//                 <button onClick={() => handleDeleteNote(note.note_id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css'; // Import your CSS file for styling\n\n// function App() {\n//   const [notes, setNotes] = useState([]);\n//   const [newNote, setNewNote] = useState('');\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, [notes]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:1995/notes');\n//       setNotes(response.data.results);\n//     } catch (error) {\n//       console.error('Error fetching notes:', error);\n//     }\n//   };\n\n//   const handleNoteChange = (event) => {\n//     setNewNote(event.target.value);\n//   };\n\n//   const handleAddNote = async () => {\n//     if (newNote.trim() === '') return;\n\n//     try {\n//       const response = await axios.post('http://localhost:1995/notes', {\n//         description: newNote\n//       });\n//       setNotes([...notes]);\n//       setNewNote('');\n//     } catch (error) {\n//       console.error('Error adding note:', error);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:1995/notes/${id}`);\n//       setNotes(notes.filter(note => note.note_id !== id));\n//     } catch (error) {\n//       console.error('Error deleting note:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Note Taking App</h1>\n\n//       <div className=\"form-container\">\n//         <input\n//           className=\"note-input\"\n//           type=\"text\"\n//           placeholder=\"Enter a new note\"\n//           value={newNote}\n//           onChange={handleNoteChange}\n//         />\n//         <button className=\"add-button\" onClick={handleAddNote}>Add Note</button>\n//       </div>\n\n//       <table className=\"note-table\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Note</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {notes.map(note => (\n//             <tr key={note.note_id}>\n//               <td>{note.note_id}</td>\n//               <td>{note.description}</td>\n//               <td>\n//                 <button className=\"delete-button\" onClick={() => handleDeleteNote(note.note_id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteForm from './components/NoteForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [editedNote, setEditedNote] = useState(null);\n  useEffect(() => {\n    fetchNotes();\n  }, [notes]);\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get('http://localhost:1995/notes');\n      setNotes(response.data.results);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  const handleAddNote = async () => {\n    if (newNote.trim() === '') return;\n    try {\n      const response = await axios.post('http://localhost:1995/notes', {\n        description: newNote\n      });\n      setNotes([...notes]);\n      setNewNote('');\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  };\n  const handleEditNote = note => {\n    setEditedNote(note);\n    setNewNote(note.description);\n  };\n  const handleCancelEdit = () => {\n    setEditedNote(null);\n    setNewNote('');\n  };\n  const handleUpdateNote = async () => {\n    if (!editedNote || newNote.trim() === '') return;\n    try {\n      const response = await axios.put(`http://localhost:1995/notes/${editedNote.note_id}`, {\n        description: newNote\n      });\n      const updatedNotes = notes.map(note => note.note_id === editedNote.note_id ? {\n        ...note,\n        description: response.data.results.description\n      } : note);\n      setNotes(updatedNotes);\n      setEditedNote(null);\n      setNewNote('');\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n  };\n  const handleDeleteNote = async id => {\n    try {\n      await axios.delete(`http://localhost:1995/notes/${id}`);\n      setNotes(notes.filter(note => note.note_id !== id));\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Note Taking App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      newNote: newNote,\n      handleNoteChange: handleNoteChange,\n      handleAddNote: handleAddNote,\n      handleUpdateNote: handleUpdateNote,\n      editedNote: editedNote,\n      handleCancelEdit: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n      notes: notes,\n      handleDeleteNote: handleDeleteNote,\n      handleEditNote: handleEditNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PZr/NzMHRftM8yQyzvjYAZ6f94g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","NoteList","NoteForm","jsxDEV","_jsxDEV","App","_s","notes","setNotes","newNote","setNewNote","editedNote","setEditedNote","fetchNotes","response","get","data","results","error","console","handleNoteChange","event","target","value","handleAddNote","trim","post","description","handleEditNote","note","handleCancelEdit","handleUpdateNote","put","note_id","updatedNotes","map","handleDeleteNote","id","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/martina/Documents/mysql-learning/mysql-node/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [notes, setNotes] = useState([]);\n//   const [newNote, setNewNote] = useState('');\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, [notes]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:1995/notes');\n//       setNotes(response.data.results);\n//     } catch (error) {\n//       console.error('Error fetching notes:', error);\n//     }\n//   };\n\n//   const handleNoteChange = (event) => {\n//     setNewNote(event.target.value);\n//   };\n\n//   const handleAddNote = async () => {\n//     if (newNote.trim() === '') return;\n\n//     try {\n//       const response = await axios.post('http://localhost:1995/notes', {\n//         description: newNote\n//       });\n//       setNotes([...notes]);\n//       setNewNote('');\n//     } catch (error) {\n//       console.error('Error adding note:', error);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:1995/notes/${id}`);\n//       setNotes(notes.filter(note => note.note_id !== id));\n//     } catch (error) {\n//       console.error('Error deleting note:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Note Taking App</h1>\n\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter a new note\"\n//           value={newNote}\n//           onChange={handleNoteChange}\n//         />\n//         <button onClick={handleAddNote}>Add Note</button>\n//       </div>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Note</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {notes.map(note => (\n//             <tr key={note.note_id}>\n//               <td>{note.note_id}</td>\n//               <td>{note.description}</td>\n//               <td>\n//                 <button onClick={() => handleDeleteNote(note.note_id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css'; // Import your CSS file for styling\n\n// function App() {\n//   const [notes, setNotes] = useState([]);\n//   const [newNote, setNewNote] = useState('');\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, [notes]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:1995/notes');\n//       setNotes(response.data.results);\n//     } catch (error) {\n//       console.error('Error fetching notes:', error);\n//     }\n//   };\n\n//   const handleNoteChange = (event) => {\n//     setNewNote(event.target.value);\n//   };\n\n//   const handleAddNote = async () => {\n//     if (newNote.trim() === '') return;\n\n//     try {\n//       const response = await axios.post('http://localhost:1995/notes', {\n//         description: newNote\n//       });\n//       setNotes([...notes]);\n//       setNewNote('');\n//     } catch (error) {\n//       console.error('Error adding note:', error);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:1995/notes/${id}`);\n//       setNotes(notes.filter(note => note.note_id !== id));\n//     } catch (error) {\n//       console.error('Error deleting note:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Note Taking App</h1>\n\n//       <div className=\"form-container\">\n//         <input\n//           className=\"note-input\"\n//           type=\"text\"\n//           placeholder=\"Enter a new note\"\n//           value={newNote}\n//           onChange={handleNoteChange}\n//         />\n//         <button className=\"add-button\" onClick={handleAddNote}>Add Note</button>\n//       </div>\n\n//       <table className=\"note-table\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Note</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {notes.map(note => (\n//             <tr key={note.note_id}>\n//               <td>{note.note_id}</td>\n//               <td>{note.description}</td>\n//               <td>\n//                 <button className=\"delete-button\" onClick={() => handleDeleteNote(note.note_id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteForm from './components/NoteForm';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [editedNote, setEditedNote] = useState(null);\n\n  useEffect(() => {\n    fetchNotes();\n  }, [notes]);\n\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get('http://localhost:1995/notes');\n      setNotes(response.data.results);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const handleAddNote = async () => {\n    if (newNote.trim() === '') return;\n\n    try {\n      const response = await axios.post('http://localhost:1995/notes', {\n        description: newNote\n      });\n      setNotes([...notes]);\n      setNewNote('');\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  };\n\n  const handleEditNote = (note) => {\n    setEditedNote(note);\n    setNewNote(note.description);\n  };\n\n  const handleCancelEdit = () => {\n    setEditedNote(null);\n    setNewNote('');\n  };\n\n  const handleUpdateNote = async () => {\n    if (!editedNote || newNote.trim() === '') return;\n\n    try {\n      const response = await axios.put(`http://localhost:1995/notes/${editedNote.note_id}`, {\n        description: newNote\n      });\n      \n      const updatedNotes = notes.map(note =>\n        note.note_id === editedNote.note_id ? { ...note, description: response.data.results.description } : note\n      );\n\n      setNotes(updatedNotes);\n      setEditedNote(null);\n      setNewNote('');\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n  };\n\n  const handleDeleteNote = async (id) => {\n    try {\n      await axios.delete(`http://localhost:1995/notes/${id}`);\n      setNotes(notes.filter(note => note.note_id !== id));\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Note Taking App</h1>\n      \n      <NoteForm\n        newNote={newNote}\n        handleNoteChange={handleNoteChange}\n        handleAddNote={handleAddNote}\n        handleUpdateNote={handleUpdateNote}\n        editedNote={editedNote}\n        handleCancelEdit={handleCancelEdit}\n      />\n\n      <NoteList notes={notes} handleDeleteNote={handleDeleteNote} handleEditNote={handleEditNote} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAElDC,S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"},"metadata":{},"sourceType":"module","externalDependencies":[]}